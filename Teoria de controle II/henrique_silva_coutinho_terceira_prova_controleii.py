# -*- coding: utf-8 -*-
"""HENRIQUE_SILVA_COUTINHO_TERCEIRA_PROVA_CONTROLEII.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Aqglr4tgQg9d82KYTa0CpHaoF9-iOQG
"""
# Necessário
# !pip install control
# from control.matlab import *
# import numpy as np

print("Função de transferência do sistema: \n")
num =  [4]
den = [1, 2, 0]

tforiginal = tf(num, den)
print(tforiginal)

bode(tforiginal)
kv = input("Digite o valor desejado de Kv: ")
MF = input("Digite o valor desejado de MF: ")
MG = input("Digite o valor desejado de MG: ")

Kv = float(kv)
MF = float(MF)
MG = float(MG)

 
K = Kv/2
tfparcial=K*tforiginal

[MG1, MF1, wcf1, wcg1]=margin(tfparcial)


Phi_m = np.float32(MF - MF1 + 8)
print("\nValor de phi m é:",Phi_m)
 
alpha = (1 - np.sin(np.pi*Phi_m/180))/(1 + np.sin(np.pi*Phi_m/180))
print("\nO valor de alpha do compensador é: ", alpha)

desloc = 1/(np.sqrt(alpha))
[MGA,MFA,wcfA,wcgA] = margin(desloc*tfparcial)
T = 1/(np.sqrt(alpha)*wcgA)
print("\nO valor de T do compensador é: " , T)

Kc = K/alpha

print("\nO valor do Kc do compensador é: ", Kc)

numGc = [Kc*alpha*T, Kc*alpha]
denGc = [T*alpha, 1]

Gc = tf(numGc,denGc)

ftcompensada = Gc*tforiginal
print("\nFunção de transferência do compensador")
print(Gc)
print("\nFunção de transferência do sistema compensado")
print(ftcompensada)

[MGGc, MFGc, wcfGc, wcgGc]=margin(ftcompensada)
print("\nValores do novo sistema:")
print("\nMG do sistema compensado: ",MGGc)
print("\nMF do sistema compensado:",MFGc)
print("\nwcf do sistema compensado:",wcfGc)
print("\nwcg do sistema compensado:",wcgGc)


bode(ftcompensada);
